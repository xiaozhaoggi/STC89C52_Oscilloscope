C51 COMPILER V9.01   MAIN                                                                  04/16/2021 17:19:43 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"    //此文件中定义了单片机的一些特殊功能寄存器
   2          #include "lcd.h"
   3          #include "stdio.h"
   4          #include "adc0809.h"
   5          #include "Keyscan.h"
   6          #include <string.h>
   7          
   8          #define DATAMAX 127       //采样数量
   9          
  10          bit flags = 0;          //中断定时标志
  11          uint32 freq = 5000;       //单片机采样频率（此频率低于ADC采样频率）
  12          uint8 amp;            //限幅系数
  13          uint8 idata addata[DATAMAX];  //AD值缓冲区
  14          uint8 TH_0, TL_0;       //T0定时器初值（在中断服务函数外计算，减少中断服务函数对采样频率的影响）
  15          uint8 modec = 0;        //显示模式，1连续，2单次
  16          bit nodelay = 0;        //波形连续无延时显示，0有延时，1无延时
  17          
  18          unsigned char code vaxis[];
  19          unsigned char code haxis[];
  20          void T0Init();          //T0定时器配置函数
  21          void ShowWaveform();      //波形显示函数
  22          uint8 LongToString(uint8 *str, int32 dat);    //长整型转换成字符串函数
  23          void KeySet(uint8 *keyValue);         //按键处理函数
  24          void Display(void);               //采样显示函数
  25          
  26          /*******************************************************************************
  27          * 函 数 名       : main
  28          * 函数功能     : 主函数
  29          * 输    入       : 无
  30          * 输    出       : 无
  31          *******************************************************************************/
  32          
  33          
  34          void main()
  35          {
  36   1        uint8 keyValue;
  37   1        T0Init();                 //配置定时器T0
  38   1        EA = 1;   
  39   1        InitLcd12864();
  40   1        ADCInit();      //初始化ADC0809
  41   1        
  42   1        LcdShowString(16, 16, "简易示波器");
  43   1        Delay10Ms(50);
  44   1        Delay10Ms(50);
  45   1        Delay10Ms(50);
  46   1        LcdWriteCmd(0x30);              //因上面切换到了图形模式，因此要清零必须切回基本模式
  47   1        LcdWriteCmd(0x01);              //清零字符显示（基本指令）
  48   1        LcdWriteChar57(0, 0, "K1 CHECK NO DELAY");
  49   1        LcdWriteChar57(0, 10, "K2 CHECK 50MS DELAY");
  50   1        LcdWriteChar57(0, 20, "K3 FREQ+");
  51   1        LcdWriteChar57(0, 30, "K4 FREQ-");
  52   1        LcdWriteChar57(7,40, "200HZ < FREQ < 5KHZ");
  53   1        LcdWriteChar57(25,55, "Press any key");
  54   1        
  55   1        while(1)
C51 COMPILER V9.01   MAIN                                                                  04/16/2021 17:19:43 PAGE 2   

  56   1        {
  57   2        
  58   2          Key_Scan(&keyValue);
  59   2          if(keyValue > 0)
  60   2            KeySet(&keyValue);
  61   2          if(modec == 1)
  62   2            Display();
  63   2      
  64   2        }   
  65   1      }
  66          
  67          
  68          /* 采样显示函数 */
  69          void Display(void)
  70          {
  71   1        uint8 i = 0;
  72   1        while(i < DATAMAX)
  73   1          if (flags)                //执行采样
  74   1          {
  75   2            flags = 0;
  76   2            ADC(addata + i);          //启动AD转换
  77   2            i++;
  78   2          }
  79   1        ShowWaveform();               //显示波形
  80   1      }
  81          
  82          /* 按键处理函数 */
  83          void KeySet(uint8 *keyValue)
  84          {
  85   1        if(*keyValue == 0x10)
  86   1        {
  87   2          modec = 1;
  88   2          nodelay = 1;
  89   2        }
  90   1        if(*keyValue == 0x20)
  91   1        {
  92   2          modec = 1;
  93   2          nodelay = 0;
  94   2        }
  95   1        
  96   1        if(*keyValue == 0x30 && freq < 50000)
  97   1          freq += 200;
  98   1        
  99   1        if(*keyValue == 0x40 && freq > 200)
 100   1          freq -= 200;
 101   1        
 102   1        *keyValue = 0;
 103   1        if(modec == 0)
 104   1          modec = 2;
 105   1        
 106   1        TH_0 = 65536-SYS_MCLK/freq >> 8;      //重新计算T0定时器初值
 107   1        TL_0 = 65536-SYS_MCLK/freq;
 108   1      }
 109          
 110          /* 波形显示函数 */
 111          void ShowWaveform()
 112          {
 113   1        uint8 i=0, tmp=0, n1=0, n2=0, n3=0, len=0;
 114   1        uint8 str[25], str1[6];       //波形参数显示字符串缓冲区
 115   1        uint32 wf, Vmax=0, Vmin=255;    //频率，电压最大值，电压最小值
 116   1        int8 updown;            //波形垂直方向自动调整量
 117   1        
C51 COMPILER V9.01   MAIN                                                                  04/16/2021 17:19:43 PAGE 3   

 118   1        /* 查询波峰、波谷，即电压最大值和最小值 */
 119   1        for(i = 0; i < DATAMAX; i++)
 120   1        {
 121   2          if(Vmax < addata[i])
 122   2            Vmax = addata[i];     //查询电压最大值
 123   2          if(Vmin > addata[i])
 124   2            Vmin = addata[i];     //查询电压最小值
 125   2        }
 126   1        
 127   1        /* 去除直流部分 */
 128   1        for(i = 0; i < DATAMAX; i++)
 129   1          addata[i] -= Vmin;
 130   1        
 131   1        /* 计算限幅系数 */
 132   1        tmp = Vmax - Vmin;
 133   1        if(tmp > 200)
 134   1          amp = 5;
 135   1        else if(tmp > 150 && tmp <= 200)
 136   1          amp = 4;
 137   1        else if(tmp > 100 && tmp <=150)
 138   1          amp = 3;
 139   1        else if(tmp > 50 && tmp <= 100)
 140   1          amp = 2;
 141   1        else
 142   1          amp = 1;
 143   1        
 144   1        tmp = 0;
 145   1        for(i = 0; i < DATAMAX; i++)
 146   1          if(tmp < addata[i]/amp)
 147   1          {
 148   2            tmp = addata[i]/amp;    //查询第一个电压最大值
 149   2            n1 = i;
 150   2          }
 151   1        for(i = n1; i < DATAMAX; i++)
 152   1          if(tmp > addata[i]/amp)
 153   1          {
 154   2            tmp = addata[i]/amp;    //查询第一个电压最小值
 155   2            n2 = i;
 156   2          }
 157   1        for(i = n2; i < DATAMAX; i++)
 158   1          if(tmp < addata[i]/amp)
 159   1          {
 160   2            tmp = addata[i]/amp;    //查询第二个电压最大值
 161   2            n3 = i;
 162   2          }
 163   1      
 164   1        /* 根据波谷、波峰计算垂直方向居中的调整量 */
 165   1        updown = 25 - (Vmax - Vmin)/amp/2;  //垂直方向居中的调整量
 166   1        
 167   1        /* 计算波形参数 */
 168   1        wf = freq/(n3 - n1);        //计算频率（单位：Hz）
 169   1        Vmax = Vmax*1000/51;        //计算电压最大值（单位：mV）
 170   1        Vmin = Vmin*1000/51;        //计算电压最小值（单位：mV）
 171   1      
 172   1        /* 显示坐标轴 */
 173   1        LcdClearArea(0, 0, 128, 64);    //清屏（从这儿开始图形模式指令）
 174   1        LcdShowImage(0, 0,  16, 51, vaxis); //画纵轴
 175   1        LcdShowImage(0, 51, 128, 4, haxis); //画横轴
 176   1        LcdWriteChar57(5, 0, "v");
 177   1        LcdWriteChar57(121, 43, "t");
 178   1        
 179   1        /* 显示波形 */
C51 COMPILER V9.01   MAIN                                                                  04/16/2021 17:19:43 PAGE 4   

 180   1        for(i = 0; i < 127; i++)
 181   1          LcdShowPoint(i+1, 51 - addata[i]/amp - updown, 1);
 182   1      
 183   1        /* 显示波形参数 */
 184   1        str[0] = '\0';
 185   1        strcat(str, "SF=");
 186   1        len = LongToString(str1, freq);   //采样频率
 187   1        str1[len] = '\0';
 188   1        strcat(str, str1);
 189   1        strcat(str, "Hz");
 190   1        LcdWriteChar57(0, 56, str);
 191   1        if(!nodelay)
 192   1          Delay10Ms(5);
 193   1        
 194   1        len = LongToString(str, wf);    //信号频率
 195   1        str[len] = '\0';
 196   1        strcat(str, "Hz ");
 197   1        len = LongToString(str1, Vmin);   //最小电压
 198   1        str1[len] = '\0';
 199   1        strcat(str, str1);
 200   1        strcat(str, "mv~");
 201   1        len = LongToString(str1, Vmax);   //最大电压
 202   1        str1[len] = '\0';
 203   1        strcat(str, str1);
 204   1        strcat(str, "mv");
 205   1        LcdWriteChar57(0, 56, str);
 206   1        if(!nodelay)
 207   1          Delay10Ms(10);
 208   1      }
 209          
 210          /* 长整型数转换为字符串，str-字符串指针，dat-待转换数，返回值-字符串长度 */
 211          uint8 LongToString(uint8 *str, int32 dat)
 212          {
 213   1          int8 i = 0;
 214   1          uint8 len = 0;
 215   1          uint8 buf[12];
 216   1          
 217   1          if (dat < 0)    //如果为负数，首先取绝对值，并在指针上添加负号
 218   1          {
 219   2              dat = -dat;
 220   2              *str++ = '-';
 221   2              len++;
 222   2          }
 223   1          do {        //先转换为低位在前的十进制数组
 224   2              buf[i++] = dat % 10;
 225   2              dat /= 10;
 226   2          } while (dat > 0);
 227   1          len += i;     //i最后的值就是有效字符的个数
 228   1          while (i-- > 0)   //将数组值转换为ASCII码反向拷贝到接收指针上
 229   1          {
 230   2              *str++ = buf[i] + '0';
 231   2          }
 232   1          *str = '\0';    //添加字符串结束符
 233   1          
 234   1          return len;     //返回字符串长度
 235   1      }
 236          
 237          /* T0定时器初始化 */
 238          void T0Init()
 239          {
 240   1          TMOD &= 0xF0;   //清零T0的控制位
 241   1          TMOD |= 0x01;   //配置T0为模式1
C51 COMPILER V9.01   MAIN                                                                  04/16/2021 17:19:43 PAGE 5   

 242   1        TH_0 = 65536-SYS_MCLK/freq >> 8;  //除数即为中断频率
 243   1        TL_0 = 65536-SYS_MCLK/freq;
 244   1          TH0   = TH_0;   //设定T0初值
 245   1          TL0   = TL_0;
 246   1        ET0   = 1;      //使能T0中断
 247   1        TR0   = 1;      //启动T0
 248   1      }
 249          
 250          /* T0定时器中断服务函数 */
 251          void T0_ISR() interrupt 1
 252          {
 253   1          //T0重新赋初值
 254   1          TH0 = TH_0;
 255   1          TL0 = TL_0;
 256   1          flags = 1;
 257   1      }
 258          
 259          /* 示波器纵轴 */
 260          const unsigned char code vaxis[] = {
 261            0x40,0x00,
 262            0xE0,0x00,
 263            0x40,0x00,
 264            0x70,0x00,
 265            0x40,0x00,
 266            0x40,0x00,
 267            0x40,0x00,
 268            0x40,0x00,
 269            0x60,0x00,
 270            0x40,0x00,
 271            0x40,0x00,
 272            0x40,0x00,
 273            0x40,0x00,
 274            0x70,0x00,
 275            0x40,0x00,
 276            0x40,0x00,
 277            0x40,0x00,
 278            0x40,0x00,
 279            0x60,0x00,
 280            0x40,0x00,
 281            0x40,0x00,
 282            0x40,0x00,
 283            0x40,0x00,
 284            0x70,0x00,
 285            0x40,0x00,
 286            0x40,0x00,
 287            0x40,0x00,
 288            0x40,0x00,
 289            0x60,0x00,
 290            0x40,0x00,
 291            0x40,0x00,
 292            0x40,0x00,
 293            0x40,0x00,
 294            0x70,0x00,
 295            0x40,0x00,
 296            0x40,0x00,
 297            0x40,0x00,
 298            0x40,0x00,
 299            0x60,0x00,
 300            0x40,0x00,
 301            0x40,0x00,
 302            0x40,0x00,
 303            0x40,0x00,
C51 COMPILER V9.01   MAIN                                                                  04/16/2021 17:19:43 PAGE 6   

 304            0x70,0x00,
 305            0x40,0x00,
 306            0x40,0x00,
 307            0x40,0x00,
 308            0x40,0x00,
 309            0x60,0x00,
 310            0x40,0x00,
 311            0x40,0x00,
 312          };
 313          
 314          /* 示波器横轴 */
 315          const unsigned char code haxis[] = {
 316            0x40,0x10,0x04,0x01,0x00,0x40,0x10,0x04,0x01,0x00,0x40,0x10,0x04,0x01,0x00,0x40,
 317            0x42,0x10,0x84,0x21,0x08,0x42,0x10,0x84,0x21,0x08,0x42,0x10,0x84,0x21,0x08,0x42,
 318            0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 319            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,
 320          };


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2097    ----
   CONSTANT SIZE    =    289    ----
   XDATA SIZE       =      8      76
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =    127    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
